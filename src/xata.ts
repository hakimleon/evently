// Generated by Xata Codegen 0.29.4. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "user",
    columns: [
      { name: "clerkId", type: "string", unique: true },
      { name: "email", type: "email", unique: true },
      { name: "username", type: "string" },
      { name: "firstname", type: "string" },
      { name: "lastname", type: "string" },
      { name: "photo", type: "string" },
    ],
    revLinks: [{ column: "organiser", table: "event" }],
  },
  {
    name: "event",
    columns: [
      { name: "title", type: "string" },
      { name: "description", type: "text" },
      { name: "location", type: "string" },
      { name: "imageUrl", type: "string" },
      { name: "startDateTime", type: "datetime" },
      { name: "endDateTime", type: "datetime" },
      { name: "price", type: "int" },
      { name: "isFree", type: "bool", defaultValue: "false" },
      { name: "url", type: "string" },
      { name: "organiser", type: "link", link: { table: "user" } },
      { name: "category", type: "link", link: { table: "category" } },
    ],
  },
  {
    name: "category",
    columns: [{ name: "name", type: "string" }],
    revLinks: [{ column: "category", table: "event" }],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type User = InferredTypes["user"];
export type UserRecord = User & XataRecord;

export type Event = InferredTypes["event"];
export type EventRecord = Event & XataRecord;

export type Category = InferredTypes["category"];
export type CategoryRecord = Category & XataRecord;

export type DatabaseSchema = {
  user: UserRecord;
  event: EventRecord;
  category: CategoryRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://hakim-leon-s-workspace-kvq5ju.eu-central-1.xata.sh/db/evently",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
